---
description: Slide image generation workflow using the MCP together-ai server (Together AI) for Slidev decks
globs:
  - presentations/**/*
alwaysApply: true
---

# Slide Image Generation (MCP)

Purpose: Offer to generate exactly two images for a deck's slides and save them under the deck's `assets/images/` folder. Uses the MCP server `together-ai` and its `post_images_generations` tool.

## When to Ask
- On new deck creation or when updating a deck's plan, ask once: "Generate 2 images for this deck now?"
- If yes, proceed with the flow below. If no, skip and continue slide work.

## Prompting Strategy
- Select 2 target slides that benefit most from visuals (e.g., cover, section divider, key concept).
- Write 2 concise prompts (â‰¤ 30 words) each. Prefer minimal, clean visuals that fit the brand/tone of the deck.
  - Avoid tiny text in the image; let Slidev text carry messaging.

## Tool to Use
- MCP Server: `together-ai` (see local MCP config)
- Tool: `post_images_generations`
- Input Schema (exact):

```json
{
  "prompt": { "type": "string", "description": "A descriptive prompt for generating the image" },
  "model": { "type": "string", "description": "Model name for image generation" },
  "width": { "type": "integer", "description": "Width of the generated image in pixels" },
  "height": { "type": "integer", "description": "Height of the generated image in pixels" },
  "steps": { "type": "integer", "description": "Number of denoising steps" },
  "n": { "type": "integer", "description": "Number of images to generate" }
}
```

## Default Parameters
- `model`: `black-forest-labs/FLUX.1-dev`
- `width`: 1024
- `height`: 1024
- `steps`: 10
- `n`: 1

## Call Pattern (run twice)
- Call `post_images_generations` twice (one per prompt):

```json
{
  "prompt": "<short, specific image description aligned to slide>",
  "model": "black-forest-labs/FLUX.1-dev",
  "width": 1024,
  "height": 1024,
  "steps": 10,
  "n": 1
}
```

## File Output & Insertion
- Ensure deck folder structure exists:
  - `/images/<project-name>/`
- When the API response returns an image URL (e.g., `https://api.together.ai/shrt/5HygAaJyD79QmqXT`):
  1. Download the image using curl command:
     ```bash
     curl -o "/images/<project-name>/<project-slug>-gen-01.png" "https://api.together.ai/shrt/5HygAaJyD79QmqXT"
     ```
  2. Save and rename the downloaded image to:
     - `/images/<project-name>/<project-slug>-gen-01.png`
     - `/images/<project-name>/<project-slug>-gen-02.png`
- Insert into relevant slides via relative paths, e.g.:

```md
<img src="/images/<project-name>/<project-slug>-gen-01.png" class="h-60 rounded shadow" />
```

## Error Handling
- If a generation call fails or returns unusable output:
  - Re-ask for a refined prompt or suggest a simpler style.
  - Optionally switch to a fallback prompt and retry once.

## Reference
- MCP server: `@open-mcp/together-ai`
- Remote server URL: `https://mcp.open-mcp.org/api/server/together-ai@latest/mcp`
- Together AI API documentation: https://docs.together.ai/

This rule limits to two images per deck unless explicitly asked to produce more.

  n: 4
})
```

This rule limits to two images per deck unless explicitly asked to produce more.
